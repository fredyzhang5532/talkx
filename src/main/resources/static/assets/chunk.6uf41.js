var m=(e,r,t)=>new Promise((n,g)=>{var l=s=>{try{h(t.next(s))}catch(a){g(a)}},o=s=>{try{h(t.throw(s))}catch(a){g(a)}},h=s=>s.done?n(s.value):Promise.resolve(s.value).then(l,o);h((t=t.apply(e,r)).next())});import{cM as c}from"./bundle.0.0.2.js?v=0.9994225010119648";const i={empty:e=>!e,nameRule:e=>e.length>10||e.length<2,emailRule:e=>!/^[a-zA-Z0-9_-|.]+@[a-zA-Z0-9_-]+(.[a-zA-Z0-9_-]+)+$/.test(e),phoneRule:e=>!!e&&!/^(?:(?:\+|00)86)?1(?:(?:3[\d])|(?:4[5-79])|(?:5[0-35-9])|(?:6[5-7])|(?:7[0-8])|(?:8[\d])|(?:9[0-35-9]))\d{8}$/.test(e),length:(e,r,t)=>e.length>r||e.length<t,betyLength:(e,r,t)=>{const n=c(e);return n>r||n<t},length:(e,r,t)=>{const n=e.length;return n>r||n<t}},f=(e,r)=>m(void 0,null,function*(){return new Promise(t=>{for(let n=0;n<r.length;n++){const{type:g,max:l,min:o,message:h}=r[n];if(i[g]&&i[g](e,l,o))return t(h)}t()})});export{i as a,f as v};
